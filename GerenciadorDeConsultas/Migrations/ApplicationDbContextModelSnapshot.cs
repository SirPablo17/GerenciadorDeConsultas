// <auto-generated />
using System;
using GerenciadorDeConsultas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorDeConsultas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsultaProcedimento", b =>
                {
                    b.Property<int>("ConsultasConsultaID")
                        .HasColumnType("int");

                    b.Property<int>("ProcedimentosProcedimentoID")
                        .HasColumnType("int");

                    b.HasKey("ConsultasConsultaID", "ProcedimentosProcedimentoID");

                    b.HasIndex("ProcedimentosProcedimentoID");

                    b.ToTable("ConsultaProcedimento");
                });

            modelBuilder.Entity("GerenciadorDeConsultas.Models.Consulta", b =>
                {
                    b.Property<int>("ConsultaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaID"));

                    b.Property<bool>("ConsultaConfirmada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorConsulta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConsultaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("GerenciadorDeConsultas.Models.Procedimento", b =>
                {
                    b.Property<int>("ProcedimentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedimentoID"));

                    b.Property<string>("DescricaoProcedimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TempoProcedimento")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorProcedimento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProcedimentoID");

                    b.ToTable("Procedimentos");
                });

            modelBuilder.Entity("GerenciadorDeConsultas.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCasa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeTentativas")
                        .HasColumnType("int");

                    b.Property<string>("RoleUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UsuarioAtivoInativo")
                        .HasColumnType("bit");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ConsultaProcedimento", b =>
                {
                    b.HasOne("GerenciadorDeConsultas.Models.Consulta", null)
                        .WithMany()
                        .HasForeignKey("ConsultasConsultaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorDeConsultas.Models.Procedimento", null)
                        .WithMany()
                        .HasForeignKey("ProcedimentosProcedimentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GerenciadorDeConsultas.Models.Consulta", b =>
                {
                    b.HasOne("GerenciadorDeConsultas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
